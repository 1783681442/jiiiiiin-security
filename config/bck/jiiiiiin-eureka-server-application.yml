# 单节点配置
spring:
  application:
    # 应用名称需要和apollo的应用名称对应
    name: jiiiiiin-eureka-server
# 建议做好规划
server:
  # 这里单机为什么要指定为这个端口：[SpringCloud系列第02节之注册中心Eureka](https://jadyer.cn/2017/01/16/springcloud-eureka/)
  port: 8761

eureka:
  instance:
    hostname: localhost
  client:
    # 设置是否从注册中心获取注册信息（缺省true）
    # 因为这是一个单点的EurekaServer，不需要同步其它EurekaServer节点的数据，故设为false
    fetch-registry: false
    # 设置是否将自己作为客户端注册到注册中心（缺省true）
    # 这里为不需要（查看@EnableEurekaServer注解的源码，会发现它间接用到了@EnableDiscoveryClient）
    register-with-eureka: false
    # server的服务地址
    service-url:
      # 默认地址
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
  server:
    # 单机配置不等待同步
    wait-time-in-ms-when-sync-empty: 0
    # 单机不考虑自保护
    enable-self-preservation: false

---
# 多节点配置

spring:
  profiles: node1
server:
  port: 8000
eureka:
  instance:
    hostname: server1
    # 不适用ip地址进行注册，单机的话模拟多节点会注册失败
    prefer-ip-address: false
  client:
    service-url:
      defaultZone: http://server2:8001/eureka/,http://server3:8002/eureka/

---
spring:
  profiles: node2
server:
  port: 8001
eureka:
  instance:
    hostname: server2
    prefer-ip-address: false
  client:
    service-url:
      defaultZone: http://server1:8000/eureka/,http://server3:8002/eureka/

---
spring:
  profiles: node3
server:
  port: 8002
eureka:
  instance:
    hostname: server3
    prefer-ip-address: false
  client:
    service-url:
      defaultZone: http://server1:8000/eureka/,http://server2:8001/eureka/
